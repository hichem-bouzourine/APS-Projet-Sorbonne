sample path, correct (yes/no), result
Samples/CMDS/CMDS(defs).aps, yes, "prog([cmds(const(a,int,num(1));cmds(const(b,int,num(3));cmds(fun(f,,int,[singleArg(x:int),singleArg(y:int)],app(id(add),(app(id(mul),(num(42),id(x))),app(id(sub),(app(id(div),(id(y),num(2))),num(42))))));echo(app(id(f),(id(a),id(b)))))))]).
."
Samples/CMDS/CMDS(end).aps, yes, "prog([echo(num(42))]).
."
Samples/TYPE/TYPE.aps, yes, "prog([cmds(const(a,bool,num(1));echo(id(a)))]).
."
Samples/TYPE/TYPES.aps, yes, "prog([cmds(fun(f,,int,[singleArg(x:int),singleArg(y:bool)],app(id(add),(app(id(mul),(num(42),id(x))),if(id(y),num(1),num(0)))));echo(app(id(f),(num(1),id(true)))))]).
."
Samples/ER(2023_3).aps, yes, "prog([cmds(funRec(fib,,int,[singleArg(x:int)],if(app(id(le),(id(x),num(1))),num(1),app(id(add),(app(id(fib),(app(id(sub),(id(x),num(1))))),app(id(fib),(app(id(sub),(id(x),num(2)))))))));echo(app(id(fib),(num(3)))))]).
."
Samples/prog7.aps, yes, "prog([echo(or(num(25),id(justify)))]).
."
Samples/DEF/DEF(const).aps, yes, "prog([cmds(const(a,int,num(3));echo(id(a)))]).
."
Samples/DEF/DEF(funRec).aps, yes, "prog([cmds(funRec(somme,,int,[singleArg(n:int)],if(app(id(eq),(id(n),num(0))),num(0),app(id(add),(id(n),app(id(somme),(app(id(sub),(id(n),num(1)))))))));echo(app(id(somme),(num(3)))))]).
."
Samples/DEF/DEF(fun).aps, yes, "prog([cmds(fun(f,,int,[singleArg(x:int),singleArg(y:int)],app(id(add),(app(id(mul),(num(42),id(x))),app(id(sub),(app(id(div),(id(y),num(2))),num(42))))));echo(app(id(f),(num(1),num(100)))))]).
."
Samples/EXPR/EXPR(if_1).aps, yes, "prog([echo(if(num(1),num(1),num(0)))]).
."
Samples/EXPR/EXPR(or_10).aps, yes, "prog([echo(or(num(1),num(0)))]).
."
Samples/EXPR/EXPR(app_mul).aps, yes, "prog([echo(app(id(mul),(num(5),num(5))))]).
."
Samples/EXPR/EXPR(app_f).aps, yes, "prog([cmds(fun(f,,int,[singleArg(x:int),singleArg(y:int)],app(id(add),(app(id(mul),(num(42),id(x))),app(id(sub),(app(id(div),(id(y),num(2))),num(42))))));echo(app(id(f),(num(1),num(100)))))]).
."
Samples/EXPR/EXPR(not_0).aps, yes, "prog([echo(app(id(not),(num(0))))]).
."
Samples/EXPR/EXPR(if_0).aps, yes, "prog([echo(if(num(0),num(1),num(0)))]).
."
Samples/EXPR/EXPR(lt_0).aps, yes, "prog([echo(app(id(lt),(num(42),num(41))))]).
."
Samples/EXPR/EXPR(num).aps, yes, "prog([echo(num(42))]).
."
Samples/EXPR/EXPR(and_01).aps, yes, "prog([echo(and(num(0),num(1)))]).
."
Samples/EXPR/EXPR(eq_1).aps, yes, "prog([echo(app(id(eq),(num(42),num(42))))]).
."
Samples/EXPR/EXPR(app_sub).aps, yes, "prog([echo(app(id(sub),(num(42),num(17))))]).
."
Samples/EXPR/EXPR(and_11).aps, yes, "prog([echo(and(num(1),num(1)))]).
."
Samples/EXPR/EXPR(app_add).aps, yes, "prog([echo(app(id(add),(num(1),num(42))))]).
."
Samples/EXPR/EXPR(app_div).aps, yes, "prog([echo(app(id(div),(num(30),num(14))))]).
."
Samples/EXPR/EXPR(or_01).aps, yes, "prog([echo(or(num(0),num(1)))]).
."
Samples/EXPR/EXPR(not_1).aps, yes, "prog([echo(app(id(not),(num(1))))]).
."
Samples/EXPR/EXPR(or_11).aps, yes, "prog([echo(or(num(1),num(1)))]).
."
Samples/EXPR/EXPR(or_00).aps, yes, "prog([echo(or(num(0),num(0)))]).
."
Samples/EXPR/EXPR(id).aps, yes, "prog([cmds(const(a,int,num(3));echo(id(a)))]).
."
Samples/EXPR/EXPR(and_10).aps, yes, "prog([echo(and(num(1),num(0)))]).
."
Samples/EXPR/EXPR(lt_1).aps, yes, "prog([echo(app(id(lt),(num(41),num(42))))]).
."
Samples/EXPR/EXPR(and_00).aps, yes, "prog([echo(and(num(0),num(0)))]).
."
Samples/EXPR/EXPR(eq_0).aps, yes, "prog([echo(app(id(eq),(num(42),num(41))))]).
."
Samples/EXPR/EXPR(abs).aps, yes, "prog([cmds(const(a,int,lambda([singleArg(x:int),singleArg(y:int)],app(id(add),(id(x),id(y)))));echo(app(id(a),(num(1),num(2)))))]).
."
Samples/prog9.aps, yes, "prog([echo(lambda([singleArg(a:int)],num(5)))]).
."
Samples/prog10.aps, yes, "prog([cmds(funRec(f,,bool,[singleArg(x:int)],num(0));echo(num(56)))]).
."
Samples/ER(2023_1).aps, yes, "prog([cmds(const(u,int,num(3));cmds(const(v,int,num(2));cmds(fun(f,,int,[singleArg(x:int),singleArg(y:int)],app(id(add),(id(x),id(y))));echo(app(id(f),(id(u),id(v)))))))]).
."
Samples/ER(2024_1).aps, yes, "prog([cmds(const(i,int,num(3));cmds(fun(f,,int,[singleArg(x:bool),singleArg(y:int)],if(id(x),id(y),id(u)));cmds(const(i,int,num(10));echo(app(id(f),(app(id(eq),(id(u),num(3))),id(u)))))))]).
."
Samples/STAT/STAT(echo).aps, yes, "prog([echo(num(42))]).
."
Samples/prog1.aps, yes, "prog([echo(id(x))]).
."
Samples/prog6.aps, yes, "prog([echo(and(num(5),id(hi)))]).
."
Samples/ER(2023_2).aps, yes, "prog([cmds(const(x,int,num(3));cmds(fun(f,,int,[singleArg(x:int)],app(id(add),(id(x),num(1))));cmds(fun(f,,bool,[singleArg(y:int)],app(id(eq),(id(x),app(id(f),(id(y))))));echo(if(app(id(f),(num(2))),id(x),num(0))))))]).
."
Samples/prog8.aps, yes, "prog([cmds(const(a,int,num(3));echo(num(3)))]).
."
Samples/ER(2024_2).aps, yes, "prog([cmds(funRec(somme,,int,[singleArg(n:int)],if(app(id(eq),(id(n),num(0))),num(0),app(id(add),(id(n),app(id(somme),(app(id(sub),(id(n),num(1)))))))));echo(app(id(somme),(num(3)))))]).
."
Samples/prog4.aps, yes, "prog([echo(app(id(add),(app(id(mul),(num(42),id(x))),app(id(sub),(app(id(div),(id(y),num(2))),num(42))))))]).
."
Samples/prog3.aps, yes, "prog([echo(app(id(add),(num(42),app(id(add),(id(x),num(42))))))]).
."
Samples/prog0.aps, yes, "prog([echo(num(42))]).
."
Samples/ARG/ARGS.aps, yes, "prog([cmds(fun(f,,int,[singleArg(x:int),singleArg(y:int)],app(id(add),(app(id(mul),(num(42),id(x))),app(id(sub),(app(id(div),(id(y),num(2))),num(42))))));echo(app(id(f),(num(1),num(100)))))]).
."
Samples/prog2.aps, yes, "prog([echo(app(id(add),(id(x),num(42))))]).
."
Samples/prog5.aps, yes, "prog([echo(if(num(3),id(x),num(42)))]).
."
